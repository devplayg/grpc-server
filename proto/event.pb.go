// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventHeader_EventType int32

const (
	EventHeader_UNKNOWN EventHeader_EventType = 0
	EventHeader_Event1  EventHeader_EventType = 1
	EventHeader_Event2  EventHeader_EventType = 2
	EventHeader_Event3  EventHeader_EventType = 3
	EventHeader_Event4  EventHeader_EventType = 4
	EventHeader_Event5  EventHeader_EventType = 5
)

var EventHeader_EventType_name = map[int32]string{
	0: "UNKNOWN",
	1: "Event1",
	2: "Event2",
	3: "Event3",
	4: "Event4",
	5: "Event5",
}

var EventHeader_EventType_value = map[string]int32{
	"UNKNOWN": 0,
	"Event1":  1,
	"Event2":  2,
	"Event3":  3,
	"Event4":  4,
	"Event5":  5,
}

func (x EventHeader_EventType) String() string {
	return proto.EnumName(EventHeader_EventType_name, int32(x))
}

func (EventHeader_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2, 0}
}

type Event struct {
	Header               *EventHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body                 *EventBody   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetHeader() *EventHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Event) GetBody() *EventBody {
	if m != nil {
		return m.Body
	}
	return nil
}

type EventBody struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventBody) Reset()         { *m = EventBody{} }
func (m *EventBody) String() string { return proto.CompactTextString(m) }
func (*EventBody) ProtoMessage()    {}
func (*EventBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *EventBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventBody.Unmarshal(m, b)
}
func (m *EventBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventBody.Marshal(b, m, deterministic)
}
func (m *EventBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventBody.Merge(m, src)
}
func (m *EventBody) XXX_Size() int {
	return xxx_messageInfo_EventBody.Size(m)
}
func (m *EventBody) XXX_DiscardUnknown() {
	xxx_messageInfo_EventBody.DiscardUnknown(m)
}

var xxx_messageInfo_EventBody proto.InternalMessageInfo

func (m *EventBody) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type EventHeader struct {
	Version              int32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	DeviceCode           string                `protobuf:"bytes,2,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`
	Date                 *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	EventType            EventHeader_EventType `protobuf:"varint,4,opt,name=eventType,proto3,enum=proto.EventHeader_EventType" json:"eventType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EventHeader) Reset()         { *m = EventHeader{} }
func (m *EventHeader) String() string { return proto.CompactTextString(m) }
func (*EventHeader) ProtoMessage()    {}
func (*EventHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}

func (m *EventHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventHeader.Unmarshal(m, b)
}
func (m *EventHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventHeader.Marshal(b, m, deterministic)
}
func (m *EventHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventHeader.Merge(m, src)
}
func (m *EventHeader) XXX_Size() int {
	return xxx_messageInfo_EventHeader.Size(m)
}
func (m *EventHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_EventHeader.DiscardUnknown(m)
}

var xxx_messageInfo_EventHeader proto.InternalMessageInfo

func (m *EventHeader) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *EventHeader) GetDeviceCode() string {
	if m != nil {
		return m.DeviceCode
	}
	return ""
}

func (m *EventHeader) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *EventHeader) GetEventType() EventHeader_EventType {
	if m != nil {
		return m.EventType
	}
	return EventHeader_UNKNOWN
}

type ServerStats struct {
	StartTimeUnixNano     int64    `protobuf:"varint,1,opt,name=start_time_unix_nano,json=startTimeUnixNano,proto3" json:"start_time_unix_nano,omitempty"`
	EndTimeUnixNano       int64    `protobuf:"varint,2,opt,name=end_time_unix_nano,json=endTimeUnixNano,proto3" json:"end_time_unix_nano,omitempty"`
	Count                 int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Size                  int64    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Worker                int32    `protobuf:"varint,5,opt,name=worker,proto3" json:"worker,omitempty"`
	TotalWorkingTimeMilli int64    `protobuf:"varint,6,opt,name=total_working_time_milli,json=totalWorkingTimeMilli,proto3" json:"total_working_time_milli,omitempty"`
	Meta                  string   `protobuf:"bytes,7,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ServerStats) Reset()         { *m = ServerStats{} }
func (m *ServerStats) String() string { return proto.CompactTextString(m) }
func (*ServerStats) ProtoMessage()    {}
func (*ServerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{3}
}

func (m *ServerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStats.Unmarshal(m, b)
}
func (m *ServerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStats.Marshal(b, m, deterministic)
}
func (m *ServerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStats.Merge(m, src)
}
func (m *ServerStats) XXX_Size() int {
	return xxx_messageInfo_ServerStats.Size(m)
}
func (m *ServerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStats.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStats proto.InternalMessageInfo

func (m *ServerStats) GetStartTimeUnixNano() int64 {
	if m != nil {
		return m.StartTimeUnixNano
	}
	return 0
}

func (m *ServerStats) GetEndTimeUnixNano() int64 {
	if m != nil {
		return m.EndTimeUnixNano
	}
	return 0
}

func (m *ServerStats) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ServerStats) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ServerStats) GetWorker() int32 {
	if m != nil {
		return m.Worker
	}
	return 0
}

func (m *ServerStats) GetTotalWorkingTimeMilli() int64 {
	if m != nil {
		return m.TotalWorkingTimeMilli
	}
	return 0
}

func (m *ServerStats) GetMeta() string {
	if m != nil {
		return m.Meta
	}
	return ""
}

type File struct {
	ContentType          int32                `protobuf:"varint,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Category             int32                `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`
	Data                 []byte               `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{4}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *File) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *File) GetCategory() int32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *File) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DebugMessage struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugMessage) Reset()         { *m = DebugMessage{} }
func (m *DebugMessage) String() string { return proto.CompactTextString(m) }
func (*DebugMessage) ProtoMessage()    {}
func (*DebugMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{5}
}

func (m *DebugMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugMessage.Unmarshal(m, b)
}
func (m *DebugMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugMessage.Marshal(b, m, deterministic)
}
func (m *DebugMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugMessage.Merge(m, src)
}
func (m *DebugMessage) XXX_Size() int {
	return xxx_messageInfo_DebugMessage.Size(m)
}
func (m *DebugMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DebugMessage proto.InternalMessageInfo

func (m *DebugMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{6}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("proto.EventHeader_EventType", EventHeader_EventType_name, EventHeader_EventType_value)
	proto.RegisterType((*Event)(nil), "proto.Event")
	proto.RegisterType((*EventBody)(nil), "proto.EventBody")
	proto.RegisterType((*EventHeader)(nil), "proto.EventHeader")
	proto.RegisterType((*ServerStats)(nil), "proto.ServerStats")
	proto.RegisterType((*File)(nil), "proto.File")
	proto.RegisterType((*DebugMessage)(nil), "proto.DebugMessage")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

func init() {
	proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e)
}

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0xad, 0x13, 0x3b, 0x6d, 0xc6, 0x51, 0xeb, 0x6f, 0xd5, 0xaf, 0xb2, 0x02, 0x52, 0x5b, 0x0b,
	0x89, 0x08, 0x24, 0x57, 0xa4, 0x20, 0x24, 0x2e, 0xb8, 0x00, 0x0a, 0x48, 0xa8, 0x41, 0xda, 0xa6,
	0xaa, 0xb8, 0x8a, 0x36, 0xf1, 0x34, 0xac, 0x48, 0x76, 0x23, 0x7b, 0x13, 0x1a, 0xde, 0x00, 0x9e,
	0x95, 0x27, 0xe0, 0x0a, 0xed, 0xac, 0x63, 0x42, 0x7f, 0xb8, 0xf2, 0xcc, 0x9c, 0x33, 0x9e, 0x99,
	0x33, 0xb3, 0x10, 0xe2, 0x02, 0x95, 0x49, 0x67, 0xb9, 0x36, 0x9a, 0x05, 0xf4, 0x69, 0xef, 0x8f,
	0xb5, 0x1e, 0x4f, 0xf0, 0x88, 0xbc, 0xe1, 0xfc, 0xf2, 0xc8, 0xc8, 0x29, 0x16, 0x46, 0x4c, 0x67,
	0x8e, 0xd7, 0xbe, 0x77, 0x9d, 0x80, 0xd3, 0x99, 0x59, 0x3a, 0x30, 0xf9, 0x04, 0xc1, 0x89, 0xfd,
	0x27, 0x7b, 0x04, 0x8d, 0xcf, 0x28, 0x32, 0xcc, 0x63, 0xef, 0xc0, 0xeb, 0x84, 0x5d, 0xe6, 0x08,
	0x29, 0xa1, 0xef, 0x09, 0xe1, 0x25, 0x83, 0x3d, 0x00, 0x7f, 0xa8, 0xb3, 0x65, 0x5c, 0x23, 0x66,
	0xb4, 0xce, 0x7c, 0xa5, 0xb3, 0x25, 0x27, 0x34, 0x49, 0xa1, 0x59, 0x85, 0xd8, 0x21, 0x04, 0x97,
	0x72, 0x82, 0x45, 0xec, 0x1d, 0xd4, 0x3b, 0x61, 0x37, 0x2c, 0x73, 0xde, 0xca, 0x09, 0x72, 0x87,
	0x24, 0x3f, 0x6a, 0x10, 0xae, 0x55, 0x63, 0x31, 0x6c, 0x2e, 0x30, 0x2f, 0xa4, 0x56, 0xd4, 0x52,
	0xc0, 0x57, 0x2e, 0xdb, 0x87, 0x30, 0xc3, 0x85, 0x1c, 0xe1, 0x60, 0xa4, 0x33, 0xa4, 0x36, 0x9a,
	0x1c, 0x5c, 0xe8, 0xb5, 0xce, 0x90, 0xa5, 0xe0, 0x67, 0xc2, 0x60, 0x5c, 0xa7, 0x06, 0xdb, 0xa9,
	0x53, 0x20, 0x5d, 0x29, 0x90, 0xf6, 0x57, 0x12, 0x71, 0xe2, 0xb1, 0x17, 0xd0, 0x24, 0x65, 0xfb,
	0xcb, 0x19, 0xc6, 0xfe, 0x81, 0xd7, 0xd9, 0xee, 0xde, 0xbf, 0x39, 0xbf, 0xb3, 0x2d, 0x87, 0xff,
	0xa1, 0x27, 0xfd, 0x72, 0x4c, 0xeb, 0xb0, 0x10, 0x36, 0xcf, 0x7b, 0x1f, 0x7a, 0x1f, 0x2f, 0x7a,
	0xd1, 0x06, 0x03, 0x68, 0x10, 0xf2, 0x24, 0xf2, 0x2a, 0xbb, 0x1b, 0xd5, 0x2a, 0xfb, 0x38, 0xaa,
	0x57, 0xf6, 0xd3, 0xc8, 0xaf, 0xec, 0x67, 0x51, 0x90, 0xfc, 0xf2, 0x20, 0x3c, 0xc3, 0x7c, 0x81,
	0xf9, 0x99, 0x11, 0xa6, 0x60, 0x47, 0xb0, 0x5b, 0x18, 0x91, 0x9b, 0x81, 0xdd, 0xee, 0x60, 0xae,
	0xe4, 0xd5, 0x40, 0x09, 0xa5, 0x49, 0x99, 0x3a, 0xff, 0x8f, 0x30, 0x3b, 0xd5, 0xb9, 0x92, 0x57,
	0x3d, 0xa1, 0x34, 0x7b, 0x0c, 0x0c, 0x55, 0x76, 0x9d, 0x5e, 0x23, 0xfa, 0x0e, 0xaa, 0xec, 0x2f,
	0xf2, 0x2e, 0x04, 0x23, 0x3d, 0x57, 0x86, 0x04, 0xab, 0x73, 0xe7, 0x30, 0x06, 0x7e, 0x21, 0xbf,
	0x39, 0x41, 0xea, 0x9c, 0x6c, 0xb6, 0x07, 0x8d, 0xaf, 0x3a, 0xff, 0x82, 0x79, 0x1c, 0xd0, 0x4e,
	0x4a, 0x8f, 0x3d, 0x87, 0xd8, 0x68, 0x23, 0x26, 0x03, 0xeb, 0x4b, 0x35, 0x76, 0x85, 0xa7, 0x72,
	0x32, 0x91, 0x71, 0x83, 0xf2, 0xff, 0x27, 0xfc, 0xc2, 0xc1, 0xb6, 0xfa, 0xa9, 0x05, 0x6d, 0x91,
	0x29, 0x1a, 0x11, 0x6f, 0xd2, 0x12, 0xc9, 0x4e, 0xbe, 0x7b, 0xe0, 0xdb, 0xcb, 0x60, 0x87, 0xd0,
	0x1a, 0x69, 0x65, 0x50, 0x99, 0x81, 0xb1, 0xab, 0x71, 0x77, 0x10, 0x96, 0x31, 0x52, 0x3c, 0x05,
	0xdf, 0x96, 0x2a, 0x6f, 0xf1, 0x9f, 0xab, 0xb6, 0x3c, 0xd6, 0x86, 0xad, 0x91, 0x30, 0x38, 0xd6,
	0xf9, 0x92, 0xa6, 0x0d, 0x78, 0xe5, 0xdb, 0x5e, 0x32, 0x61, 0x04, 0x0d, 0xdc, 0xa2, 0xd3, 0x10,
	0x49, 0x07, 0x5a, 0x6f, 0x70, 0x38, 0x1f, 0x9f, 0x62, 0x51, 0x88, 0x31, 0xda, 0xab, 0x9c, 0x3a,
	0x93, 0xba, 0x69, 0xf2, 0x95, 0x9b, 0x00, 0x6c, 0x71, 0x2c, 0x66, 0x5a, 0x15, 0xd8, 0xfd, 0xe9,
	0x41, 0x8b, 0x76, 0x69, 0x77, 0x28, 0x47, 0xc8, 0x1e, 0x82, 0x7f, 0x86, 0x2a, 0x63, 0xad, 0xf5,
	0xb3, 0x6a, 0xef, 0x94, 0xde, 0x2a, 0x2f, 0xd9, 0x60, 0xc7, 0x00, 0x96, 0x58, 0xbe, 0x81, 0x5b,
	0x5e, 0xe1, 0x6d, 0x49, 0x2f, 0x01, 0x38, 0x16, 0x68, 0xa8, 0x53, 0xb6, 0x77, 0x43, 0x84, 0x13,
	0xfb, 0xe2, 0xdb, 0x77, 0xc4, 0x29, 0x7f, 0xfb, 0x1d, 0x9a, 0xf5, 0x7b, 0xbb, 0xeb, 0x1f, 0xab,
	0x86, 0xd6, 0xb8, 0xc9, 0xc6, 0xb0, 0x41, 0xc1, 0xe3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9b,
	0x36, 0x46, 0x7c, 0xa0, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	Send(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Response, error)
	SendHeader(ctx context.Context, in *EventHeader, opts ...grpc.CallOption) (*Response, error)
	ResetDebug(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	GetServerStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ServerStats, error)
}

type eventServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEventServiceClient(cc grpc.ClientConnInterface) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) Send(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.EventService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) SendHeader(ctx context.Context, in *EventHeader, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.EventService/SendHeader", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) ResetDebug(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.EventService/ResetDebug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetServerStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ServerStats, error) {
	out := new(ServerStats)
	err := c.cc.Invoke(ctx, "/proto.EventService/GetServerStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	Send(context.Context, *Event) (*Response, error)
	SendHeader(context.Context, *EventHeader) (*Response, error)
	ResetDebug(context.Context, *empty.Empty) (*empty.Empty, error)
	GetServerStats(context.Context, *empty.Empty) (*ServerStats, error)
}

// UnimplementedEventServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventServiceServer struct {
}

func (*UnimplementedEventServiceServer) Send(ctx context.Context, req *Event) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}
func (*UnimplementedEventServiceServer) SendHeader(ctx context.Context, req *EventHeader) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendHeader not implemented")
}
func (*UnimplementedEventServiceServer) ResetDebug(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetDebug not implemented")
}
func (*UnimplementedEventServiceServer) GetServerStats(ctx context.Context, req *empty.Empty) (*ServerStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerStats not implemented")
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EventService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Send(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_SendHeader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventHeader)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).SendHeader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EventService/SendHeader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).SendHeader(ctx, req.(*EventHeader))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_ResetDebug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).ResetDebug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EventService/ResetDebug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).ResetDebug(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetServerStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetServerStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EventService/GetServerStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetServerStats(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _EventService_Send_Handler,
		},
		{
			MethodName: "SendHeader",
			Handler:    _EventService_SendHeader_Handler,
		},
		{
			MethodName: "ResetDebug",
			Handler:    _EventService_ResetDebug_Handler,
		},
		{
			MethodName: "GetServerStats",
			Handler:    _EventService_GetServerStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event.proto",
}
